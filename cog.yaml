build:
  gpu: true
  cuda: "11.8"
  python_version: "3.9"
  run:
    # Update pip first
    - "pip install --upgrade pip setuptools wheel"
    
    # Install PyTorch ecosystem
    - "pip install --no-cache-dir torch==2.0.1+cu118 torchvision>=0.15.0 torchaudio==2.0.2 --extra-index-url https://download.pytorch.org/whl/cu118"
    
    # Install base requirements common to both projects
    - "pip install --no-cache-dir 'numpy<2' 'setuptools>=65.5.1'"
    - "pip install --no-cache-dir Cython einops unidecode scipy matplotlib pandas"
    - "pip install --no-cache-dir tensorboard==2.14.0 lightning==2.2.4 torchmetrics>=0.11.4"
    - "pip install --no-cache-dir hydra-core==1.3.2 hydra-colorlog==1.2.0 hydra-optuna-sweeper==1.2.0 HyperPyYAML==1.2.2"
    - "pip install --no-cache-dir phonemizer rootutils pre-commit rich pytest"
    
    # Install CosyVoice specific dependencies
    - "pip install --no-cache-dir conformer==0.3.2 deepspeed==0.14.2"
    - "pip install --no-cache-dir diffusers==0.27.2 modelscope==1.15.0"
    - "pip install --no-cache-dir gdown==5.1.0 wget==3.2"
    - "pip install --no-cache-dir gradio==4.32.2"
    - "pip install --no-cache-dir grpcio==1.57.0 grpcio-tools==1.57.0"
    - "pip install --no-cache-dir inflect==7.3.1 librosa==0.10.2"
    - "pip install --no-cache-dir networkx==3.1 omegaconf==2.3.0"
    - "pip install --no-cache-dir onnx==1.16.0 onnxruntime-gpu==1.16.0"
    - "pip install --no-cache-dir openai-whisper==20231117"
    - "pip install --no-cache-dir protobuf==4.25 soundfile==0.12.1"
    - "pip install --no-cache-dir uvicorn==0.30.0"
    - "pip install --no-cache-dir fastapi-cli==0.0.4"
    - "pip install --no-cache-dir WeTextProcessing==1.0.3"
    
    # Install conda and pynini
    - curl -o /root/miniforge.sh -L https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
    - bash /root/miniforge.sh -b -p /root/conda
    - /root/conda/bin/conda install -y -c conda-forge pynini==2.1.5
    
    # Clone and install Matcha-TTS
    - "git clone https://github.com/shivammehta25/Matcha-TTS.git /src/third_party/Matcha-TTS"
    - "cd /src/third_party/Matcha-TTS && pip install --no-deps ."
    
    # Set PYTHONPATH
    - "export PYTHONPATH=$PYTHONPATH:/src/third_party/Matcha-TTS"

    # Install Pydantic v1 and compatible FastAPI version first
    - "pip install --no-cache-dir 'pydantic<=1.10.0"

  system_packages:
    - "ffmpeg"
    - "libsox-dev"
    - "sox"
    - "git"

predict: "predict.py:Predictor"